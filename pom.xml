<?xml version="1.0" encoding="UTF-8"?>
<!--
~ Licensed to the Apache Software Foundation (ASF) under one or more
~ contributor license agreements.  See the NOTICE file distributed with
~ this work for additional information regarding copyright ownership.
~ The ASF licenses this file to You under the Apache License, Version 2.0
~ (the "License"); you may not use this file except in compliance with
~ the License.  You may obtain a copy of the License at
~
~    http://www.apache.org/licenses/LICENSE-2.0
~
~ Unless required by applicable law or agreed to in writing, software
~ distributed under the License is distributed on an "AS IS" BASIS,
~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~ See the License for the specific language governing permissions and
~ limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.apache.spark</groupId>
    <artifactId>spark-parent_2.11</artifactId>
    <version>2.4.0</version>
    <relativePath>../../pom.xml</relativePath>
  </parent>

  <!-- TODO check if we  have to worry about ASL license in new code -->
  <artifactId>spark-sql-kinesis_2.11</artifactId>
  <packaging>jar</packaging>
  <name>Kinesis Integration for Structured Streaming</name>

  <properties>
    <sbt.project.name>sql-kinesis</sbt.project.name>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-sql_${scala.binary.version}</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-core_${scala.binary.version}</artifactId>
      <version>${project.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-catalyst_${scala.binary.version}</artifactId>
      <version>${project.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-sql_${scala.binary.version}</artifactId>
      <version>${project.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>amazon-kinesis-client</artifactId>
      <version>1.8.10</version>
    </dependency>
    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>aws-java-sdk-sts</artifactId>
      <version>1.11.271</version>
    </dependency>
    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>amazon-kinesis-producer</artifactId>
      <version>0.12.8</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-cbor</artifactId>
      <version>${fasterxml.jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.scalacheck</groupId>
      <artifactId>scalacheck_${scala.binary.version}</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-tags_${scala.binary.version}</artifactId>
    </dependency>

    <!--
      This spark-tags test-dep is needed even though it isn't used in this module, otherwise testing-cmds that exclude
      them will yield errors.
    -->
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-tags_${scala.binary.version}</artifactId>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>

  </dependencies>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
           <groupId>org.scalastyle</groupId>
             <artifactId>scalastyle-maven-plugin</artifactId>
             <version>2.17</version>
             <configuration>
               <verbose>false</verbose>
               <failOnViolation>false</failOnViolation>
               <includeTestSourceDirectory>false</includeTestSourceDirectory>
               <failOnWarning>false</failOnWarning>
               <sourceDirectory>${basedir}/src/main/scala</sourceDirectory>
               <testSourceDirectory>${basedir}/src/test/scala</testSourceDirectory>
               <configLocation>../../scalastyle-config.xml</configLocation>
               <outputFile>${basedir}/target/scalastyle-output.xml</outputFile>
               <inputEncoding>${project.build.sourceEncoding}</inputEncoding>
               <outputEncoding>${project.reporting.outputEncoding}</outputEncoding>
             </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>3.1.0</version>
          <executions>
            <execution>
              <phase>package</phase>
              <goals>
                <goal>shade</goal>
              </goals>
              <configuration>
                <artifactSet>
                <includes>
                  <include>com.amazonaws:amazon-kinesis-client:*</include>
                  <include>com.amazonaws:amazon-kinesis-producer:*</include>
                  <include>com.amazonaws:aws-java-sdk-kinesis:*</include>
                  <include>com.amazonaws:aws-java-sdk-dynamodb:*</include>
                  <include>com.amazonaws:aws-java-sdk-core:*</include>
                  <include>com.amazonaws:aws-java-sdk-sts:*</include>
                  <include>com.fasterxml.jackson.dataformat:*:*</include>
                </includes>
                </artifactSet>
                <relocations>
                    <relocation>
                    <pattern>com.fasterxml.jackson.dataformat</pattern>
                    <shadedPattern>org.apache.spark.sql.kinesis.shaded.fasterxml.jackson.dataformat</shadedPattern>
                      <includes>
                        <include>com.fasterxml.jackson.dataformat.**</include>
                      </includes>
                    </relocation>
                    <relocation>
                      <pattern>com.amazonaws</pattern>
                      <shadedPattern>org.apache.spark.sql.kinesis.shaded.amazonaws</shadedPattern>
                      <includes>
                        <include>com.amazonaws.**</include>
                      </includes>
                    </relocation>
                </relocations>
                <filters>
                  <filter>
                    <artifact>*:*</artifact>
                    <excludes>
                      <exclude>META-INF/LICENSE*</exclude>
                      <exclude>META-INF/NOTICE*</exclude>
                      <exclude>META-INF/DEPENDENCIES</exclude>
                      <exclude>META-INF/maven/**</exclude>
                      <exclude>META-INF/*.xml</exclude>
                      <exclude>META-INF/*.SF</exclude>
                      <exclude>META-INF/*.DSA</exclude>
                      <exclude>META-INF/*.RSA</exclude>
                      <exclude>models/*</exclude>
                      <exclude>.gitkeep</exclude>
                    </excludes>
                  </filter>
                </filters>
                <transformers>
                  <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
                  <transformer implementation="org.apache.maven.plugins.shade.resource.DontIncludeResourceTransformer">
                    <resource>log4j.properties</resource>
                  </transformer>
                  <transformer implementation="org.apache.maven.plugins.shade.resource.ApacheLicenseResourceTransformer"/>
                  <transformer implementation="org.apache.maven.plugins.shade.resource.ApacheNoticeResourceTransformer"/>
                </transformers>
              </configuration>
            </execution>
          </executions>
        </plugin>
       </plugins>
    </pluginManagement>
    <outputDirectory>target/scala-${scala.binary.version}/classes</outputDirectory>
    <testOutputDirectory>target/scala-${scala.binary.version}/test-classes</testOutputDirectory>
  </build>
</project>
